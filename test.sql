SET DEFINE OFF;
SET SQLBLANKLINES ON;

--------------------------------------------------------
-- DDL for Table COMPANY
--------------------------------------------------------
CREATE TABLE COMPANY (
  COMPANY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  NAME       VARCHAR2(100) NOT NULL,
  TICKER     VARCHAR2(10) NOT NULL,
  SECTOR     VARCHAR2(50),
  COUNTRY    VARCHAR2(50),
  WEBSITE    VARCHAR2(100),
  CONSTRAINT pk_company PRIMARY KEY (COMPANY_ID),
  CONSTRAINT uq_company_ticker UNIQUE (TICKER)
);


--------------------------------------------------------
-- DDL for Table COMPANY_ARCHIVE
--------------------------------------------------------
CREATE TABLE COMPANY_ARCHIVE
(
  COMPANY_ID NUMBER,
  NAME       VARCHAR2(100 BYTE),
  TICKER     VARCHAR2(10 BYTE),
  SECTOR     VARCHAR2(50 BYTE),
  COUNTRY    VARCHAR2(50 BYTE),
  WEBSITE    VARCHAR2(100 BYTE),
  DELETED_AT TIMESTAMP (6) DEFAULT SYSTIMESTAMP,
  DELETED_BY VARCHAR2(50 BYTE)
);


--------------------------------------------------------
-- DDL for Table INVESTOR
--------------------------------------------------------
CREATE TABLE INVESTOR
(
  INVESTOR_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  CLIENT_CODE VARCHAR2(20 BYTE) NOT NULL,
  NAME        VARCHAR2(100 BYTE) NOT NULL,
  EMAIL       VARCHAR2(100 BYTE) NOT NULL,
  PHONE       VARCHAR2(20 BYTE),
  NATIONAL_ID VARCHAR2(11 BYTE),
  CREATED_AT  TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT pk_investor PRIMARY KEY (investor_id),
  CONSTRAINT uq_investor_client_code UNIQUE (client_code),
  CONSTRAINT uq_investor_email UNIQUE (email)
);

--------------------------------------------------------
-- DDL for Table INVESTOR_ARCHIVE
--------------------------------------------------------
CREATE TABLE INVESTOR_ARCHIVE
(
  INVESTOR_ID NUMBER,
  CLIENT_CODE VARCHAR2(20 BYTE),
  NAME        VARCHAR2(100 BYTE),
  EMAIL       VARCHAR2(100 BYTE),
  PHONE       VARCHAR2(20 BYTE),
  NATIONAL_ID VARCHAR2(11 BYTE),
  CREATED_AT  TIMESTAMP (6),
  DELETED_AT  TIMESTAMP (6),
  DELETED_BY  VARCHAR2(50 BYTE)
);


--------------------------------------------------------
-- DDL for Table EXCHANGERATE
--------------------------------------------------------
CREATE TABLE EXCHANGERATE
(
  RATE_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  CURRENCY   VARCHAR2(10 BYTE),
  RATE_TO_PLN NUMBER(10,4),
  RATE_DATE  DATE
);

--------------------------------------------------------
-- DDL for Table EXCHANGERATE_ARCHIVE
--------------------------------------------------------
CREATE TABLE EXCHANGERATE_ARCHIVE
(
  RATE_ID    NUMBER,
  CURRENCY   VARCHAR2(10 BYTE),
  RATE_TO_PLN NUMBER(10,4),
  RATE_DATE  DATE,
  ARCHIVED_AT TIMESTAMP (6) DEFAULT SYSTIMESTAMP
);


--------------------------------------------------------
-- DDL for Table LOG
--------------------------------------------------------
CREATE TABLE LOG
(
  LOG_ID       NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
  LOG_TIME     TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
  STATUS       VARCHAR2(10 BYTE) DEFAULT 'OK',
  OPERATION    VARCHAR2(20 BYTE),
  USER_NAME    VARCHAR2(50 BYTE),
  TABLE_NAME   VARCHAR2(50 BYTE),
  ACTION_DETAIL VARCHAR2(1000 BYTE),
  MESSAGE      CLOB,

  CONSTRAINT pk_log PRIMARY KEY (LOG_ID)
);

--------------------------------------------------------
-- DDL for Table TEST_SCHEDULER_LOG
--------------------------------------------------------
CREATE TABLE TEST_SCHEDULER_LOG
(
  LOG_TIME TIMESTAMP (6) DEFAULT SYSTIMESTAMP,
  MESSAGE  VARCHAR2(100 BYTE)
);


--------------------------------------------------------
-- DDL for Table STOCKPRICE
--------------------------------------------------------
CREATE TABLE STOCKPRICE
(
  PRICE_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  COMPANY_ID      NUMBER NOT NULL,
  TRADE_DATE      DATE NOT NULL,
  OPEN_PRICE      NUMBER(10,2),
  HIGH_PRICE      NUMBER(10,2),
  LOW_PRICE       NUMBER(10,2),
  CLOSE_PRICE     NUMBER(10,2),
  VOLUME          NUMBER,
  CURRENCY        VARCHAR2(10) DEFAULT 'USD',
  CLOSE_PRICE_PLN NUMBER(10,2),
  SOURCE          VARCHAR2(50),

  CONSTRAINT PK_STOCKPRICE PRIMARY KEY (PRICE_ID)
);


--------------------------------------------------------
-- DDL for Table STOCKPRICE_ARCHIVE
--------------------------------------------------------
CREATE TABLE STOCKPRICE_ARCHIVE
(
  ARCHIVE_ID       NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  COMPANY_ID       NUMBER,
  TRADE_DATE       DATE,
  OPEN_PRICE       NUMBER(10,2),
  HIGH_PRICE       NUMBER(10,2),
  LOW_PRICE        NUMBER(10,2),
  CLOSE_PRICE      NUMBER(10,2),
  VOLUME           NUMBER,
  CURRENCY         VARCHAR2(10),
  CLOSE_PRICE_PLN  NUMBER(10,2),
  ARCHIVED_AT      TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,
  DELETED_BY       VARCHAR2(50),
  NOTE             VARCHAR2(200),

  CONSTRAINT PK_STOCKPRICE_ARCHIVE PRIMARY KEY (ARCHIVE_ID)
);

--------------------------------------------------------
-- DDL for Table PORTFOLIO
--------------------------------------------------------
CREATE TABLE PORTFOLIO (
  PORTFOLIO_ID  NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  INVESTOR_ID   NUMBER NOT NULL,
  COMPANY_ID    NUMBER NOT NULL,
  SHARES        NUMBER NOT NULL,
  AVG_PRICE     NUMBER(10,2),
  LAST_UPDATED  TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT PK_PORTFOLIO PRIMARY KEY (PORTFOLIO_ID),
  CONSTRAINT UQ_PORTFOLIO_UNIQUE UNIQUE (INVESTOR_ID, COMPANY_ID)
);


--------------------------------------------------------
-- DDL for Table TRANSACTION
--------------------------------------------------------
CREATE TABLE TRANSACTION
(
  TRANSACTION_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  INVESTOR_ID       NUMBER NOT NULL,
  COMPANY_ID        NUMBER NOT NULL,
  OPERATION         VARCHAR2(10),
  SHARES            NUMBER NOT NULL,
  PRICE_PER_SHARE   NUMBER(10,2),
  COMMISSION_RATE   NUMBER(5,2) DEFAULT 0,
  TOTAL_VALUE       NUMBER(12,2),
  TRANSACTION_DATE  DATE DEFAULT SYSDATE,

  CONSTRAINT PK_TRANSACTION PRIMARY KEY (TRANSACTION_ID)
);

--------------------------------------------------------
-- DDL for Table PORTFOLIOSNAPSHOT
--------------------------------------------------------
CREATE TABLE PORTFOLIOSNAPSHOT
(
  SNAPSHOT_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  INVESTOR_ID      NUMBER NOT NULL,
  SNAPSHOT_DATE    DATE DEFAULT SYSDATE,
  TOTAL_VALUE_PLN  NUMBER(12,2),
  SNAPSHOT_TYPE    VARCHAR2(50) DEFAULT 'DAILY',

  CONSTRAINT PK_PORTFOLIOSNAPSHOT PRIMARY KEY (SNAPSHOT_ID)
);


--------------------------------------------------------
-- DDL for Table PORTFOLIOSNAPSHOT_ARCHIVE
--------------------------------------------------------
CREATE TABLE PORTFOLIOSNAPSHOT_ARCHIVE
(
  SNAPSHOT_ID    NUMBER NOT NULL,
  INVESTOR_ID    NUMBER NOT NULL,
  SNAPSHOT_DATE  DATE,
  TOTAL_VALUE_PLN NUMBER(12,2),
  SNAPSHOT_TYPE  VARCHAR2(50 BYTE),
  ARCHIVED_AT    TIMESTAMP (6) DEFAULT SYSTIMESTAMP
);

--------------------------------------------------------
-- DDL for Table PORTFOLIO_SUMMARY
--------------------------------------------------------
CREATE TABLE PORTFOLIO_SUMMARY
(
  SUMMARY_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY,
  INVESTOR_ID   NUMBER,
  PERIOD_TYPE   VARCHAR2(10 BYTE) DEFAULT 'MONTH',
  PERIOD_YEAR   NUMBER,
  PERIOD_NUMBER NUMBER,
  PERIOD_LABEL  VARCHAR2(20 BYTE),
  TOTAL_VALUE_PLN NUMBER(12,2),
  AVERAGE_PRICE_PLN NUMBER(12,2),
  GENERATED_AT  TIMESTAMP (6) DEFAULT SYSTIMESTAMP
);

CREATE TABLE PORTFOLIO_ACTIVITY_SUMMARY (
  SUMMARY_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  INVESTOR_ID           NUMBER NOT NULL,
  PERIOD_TYPE           VARCHAR2(10),
  PERIOD_FROM           DATE NOT NULL,
  PERIOD_TO             DATE NOT NULL,
  GENERATED_AT          TIMESTAMP DEFAULT SYSTIMESTAMP,
  NUMBER_OF_TRANSACTIONS NUMBER,
  TOTAL_VALUE_PLN       NUMBER(12,2)
);


ALTER TABLE PORTFOLIO ADD CONSTRAINT FK_PORTFOLIO_INVESTOR FOREIGN KEY (INVESTOR_ID) REFERENCES INVESTOR (INVESTOR_ID) ENABLE;
ALTER TABLE PORTFOLIO ADD CONSTRAINT FK_PORTFOLIO_COMPANY  FOREIGN KEY (COMPANY_ID)  REFERENCES COMPANY  (COMPANY_ID)  ENABLE;

ALTER TABLE TRANSACTION ADD CONSTRAINT FK_TX_INVESTOR FOREIGN KEY (INVESTOR_ID) REFERENCES INVESTOR (INVESTOR_ID) ENABLE;
ALTER TABLE TRANSACTION ADD CONSTRAINT FK_TX_COMPANY  FOREIGN KEY (COMPANY_ID)  REFERENCES COMPANY  (COMPANY_ID)  ENABLE;

ALTER TABLE STOCKPRICE ADD CONSTRAINT FK_STOCK_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID) ON DELETE CASCADE ENABLE;

ALTER TABLE PORTFOLIOSNAPSHOT ADD CONSTRAINT FK_SNAP_INVESTOR FOREIGN KEY (INVESTOR_ID) REFERENCES INVESTOR (INVESTOR_ID) ENABLE;


EXIT;
